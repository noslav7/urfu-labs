package ru.urfu.timus;

import java.io.BufferedReader;
import java.io.InputStreamReader;

public class Task18_1654_EncryptedMessage {
    public static void main(String[] args) throws Exception {
        char[] a = new BufferedReader(new InputStreamReader(System.in)).readLine().toCharArray();
        int m = 0;
        for (char c : a) {
            if (m > 0 && a[m - 1] == c) {
                m--;
            } else {
                a[m++] = c;
            }
        }
        System.out.print(new String(a, 0, m));
    }
}


/*
1654. Шифровка
Ограничение времени: 1.0 секунды
Ограничение памяти: 64 МБ
Мюллер много раз пытался поймать Штирлица с поличным, но тот всё время выкручивался. Как-то раз Штирлиц
просматривал электронную почту. В это время незаметно вошел Мюллер и увидел, как у него на экране
появился бессмысленный набор символов. «Шифровка», — подумал Мюллер. «UTF-8», — подумал Штирлиц.
Известно, что Штирлиц шифрует текст следующим образом:
Убирает все пробелы и знаки препинания.
Заменяет все подряд идущие одинаковые буквы на одну такую букву.
Многократно вставляет в произвольное место текста две одинаковых буквы.
Попробуйте восстановить текст, каким он был после второго шага. Для этого удалите из текста все пары
одинаковых символов, добавленные на третьем шаге.
Исходные данные
В единственной строке записана шифровка Штирлица, состоящая из строчных латинских букв. Длина шифровки
не превосходит 200000.
Результат
Выведите восстановленный текст.
Пример: https://acm.timus.ru/problem.aspx?space=1&num=1654
исходные данные	результат
wwstdaadierfflitzzz
stierlitz
 */
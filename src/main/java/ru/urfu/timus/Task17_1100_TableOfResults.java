package ru.urfu.timus;

import java.util.*;

public class Task17_1100_TableOfResults {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();

        int[][] a = new int[n][2];
        for (int i = 0; i < n; i++) {
            a[i][0] = sc.nextInt();
            a[i][1] = sc.nextInt();
        }
        Arrays.sort(a, (x, y) -> Integer.compare(y[1], x[1]));
        StringBuilder sb = new StringBuilder();
        for (int[] r : a) {
            sb.append(r[0]).append(' ').append(r[1]).append('\n');
        }
        System.out.print(sb);
    }
}

/*
1100. Таблица результатов
Ограничение времени: 1.0 секунды
Ограничение памяти: 16 МБ
Старое программное обеспечение для проведения соревнований использует пузырьковую сортировку
для создания таблицы результатов. Однако сейчас команд слишком много, и программное обеспечение
работает слишком медленно. Вас попросили написать программу, которая создаёт такую же таблицу
результатов, как и старое программное обеспечение, но быстро.
Исходные данные
Первая строка входных данных содержит только целое число 1 < N ≤ 150 000 — количество команд.
Каждая из следующих N строк содержит два целых числа: 1 ≤ ID ≤ 107 и 0 ≤ M ≤ 100.
ID — уникальный номер команды, а M — количество решённых этой командой задач.
Результат
Вывод должен содержать N строк с двумя целыми числами ID и M в каждой.
Строки должны идти по убыванию M в порядке, полученном с помощью пузырьковой сортировки (см. ниже).
Пример
https://acm.timus.ru/problem.aspx?space=1&num=1100
Замечания
Пузырьковая сортировка работает следующим образом:
пока существуют A[i] и A[i+1], такие что A[i] < A[i+1],
   обменять(A[i], A[i+1]);
*/
